
# 🚀 RENDER.COM CONFIGURATION - PRODUCTION READY WITH ALL FIXES
# Complete configuration for deploy with all critical and moderate corrections

services:
  # 🌐 Main Web Service - ADK Arbitrage Profit Guard (FIXED)
  - type: web
    name: adk-arbitrage-profit-guard-fixed
    runtime: node
    plan: starter # Upgrade to standard/pro for better performance in production
    region: oregon # US West Coast - optimal for crypto exchanges
    buildCommand: |
      echo "🚀 Building ADK Arbitrage Profit Guard with ALL fixes..."
      npm ci --only=production
      npm run render:build
      echo "✅ Build completed successfully"
    startCommand: |
      echo "🚀 Starting FIXED ADK Arbitrage Profit Guard..."
      npm run render:start
    healthCheckPath: /api/health
    
    # 🔧 Environment Variables - PRODUCTION READY
    envVars:
      # 🚀 Server Configuration
      - key: NODE_ENV
        value: production
      - key: PORT
        value: 10000
      - key: HOST
        value: 0.0.0.0
      
      # 🌐 Enhanced Proxy Configuration (FIXED)
      - key: PROXY_ENABLED
        value: true
      - key: PROXY_TEST_TIMEOUT
        value: 15000
      - key: PROXY_NO_PROXY
        value: localhost,127.0.0.1,*.local,*.render.com
      
      # 🔗 Proxy URLs (Set via Render Dashboard)
      - key: PROXY_URL
        sync: false # Configure via dashboard with working proxy
      - key: PROXY_URL_2
        sync: false # Backup proxy
      - key: PROXY_URL_3
        sync: false # Fallback proxy
      - key: RENDER_INTERNAL_PROXY_URL
        sync: false # Internal proxy service
      
      # 🔑 Exchange API Keys (CRITICAL - Set via Render Dashboard ONLY)
      - key: BINANCE_API_KEY
        sync: false
      - key: BINANCE_API_SECRET
        sync: false
      - key: OKX_API_KEY
        sync: false
      - key: OKX_API_SECRET
        sync: false
      - key: OKX_PASSPHRASE
        sync: false
      - key: BYBIT_API_KEY
        sync: false
      - key: BYBIT_API_SECRET
        sync: false
      
      # 🗃️ Database Configuration (Connected automatically)
      - key: DATABASE_URL
        fromDatabase:
          name: adk-arbitrage-fixed-db
          property: connectionString
      
      # 🛡️ Security Configuration
      - key: JWT_SECRET
        generateValue: true
      - key: NEXTAUTH_SECRET
        generateValue: true
      
      # 🎯 Trading Configuration (SAFE DEFAULTS)
      - key: REAL_TRADING_ENABLED
        value: false # CRITICAL: Keep false until fully tested
      - key: PAPER_TRADING_MODE
        value: true
      - key: MAX_NOTIONAL_USDT
        value: 1000
      - key: MAX_DAILY_TRADES
        value: 20
      - key: MIN_PROFIT_THRESHOLD
        value: 0.001
      
      # 📊 Performance & Monitoring (OPTIMIZED)
      - key: LOG_LEVEL
        value: info
      - key: RATE_LIMIT_REQUESTS_PER_MINUTE
        value: 100
      - key: CACHE_TTL_SECONDS
        value: 30
      - key: EXCHANGE_TIMEOUT
        value: 30000
      - key: GEX_REFRESH_SEC
        value: 120
      
      # 🎯 Trading Pairs & Parameters (PRODUCTION OPTIMIZED)
      - key: PAIRS
        value: BTC/USDT,ETH/USDT,BNB/USDT,SOL/USDT,ADA/USDT,XRP/USDT,AVAX/USDT,DOT/USDT,UNI/USDT,ATOM/USDT
      - key: BASIS_ENTRY
        value: 0.004
      - key: BASIS_EXIT
        value: 0.0015
      - key: SLIPPAGE_K
        value: 0.0002
      - key: FUNDING_LOOKAHEAD_H
        value: 8
      - key: WYCKOFF_N
        value: 50
      - key: ARBITRAGE_ENABLED
        value: true
      
      # 🌍 CORS Configuration for Vercel Frontend
      - key: FRONTEND_URL
        value: https://adkarbitrageprofitguard.vercel.app
      - key: CORS_ORIGINS
        value: https://adkarbitrageprofitguard.vercel.app,https://*.vercel.app,http://localhost:3000,http://localhost:5173
      
      # 🏢 Render Deployment Configuration
      - key: RENDER_REGION
        value: oregon
      - key: RENDER_SERVICE_NAME
        value: adk-arbitrage-profit-guard-fixed

databases:
  # 📊 PostgreSQL Database (FIXED CONFIGURATION)
  - name: adk-arbitrage-fixed-db
    databaseName: adk_arbitrage_production
    user: adk_admin
    plan: starter # Upgrade as needed for production
    region: oregon
    
    # Database will be automatically connected via DATABASE_URL

# 🔧 Build Configuration (OPTIMIZED)
buildFilter:
  paths:
    - server/**
    - client/**
    - shared/**
    - migrations/**
    - scripts/**
    - package.json
    - package-lock.json
    - package-fixed.json
    - tsconfig.json
    - vite.config.ts
    - tailwind.config.ts
    - drizzle.config.ts
  ignoredPaths:
    - "*.md"
    - "*.pdf"
    - "*.log"
    - logs/**
    - .git/**
    - node_modules/**
    - dist/**
    - .env*
    - temp/**

# 🚀 Pre-deploy Commands
preDeployCommand: |
  echo "🚀 Running pre-deploy checks..."
  echo "✅ Environment: $NODE_ENV"
  echo "✅ Port: $PORT"
  echo "✅ Database URL configured: $([ -n "$DATABASE_URL" ] && echo "YES" || echo "NO")"
  echo "✅ Proxy enabled: $PROXY_ENABLED"
  echo "🚀 Pre-deploy checks completed"

# 🏁 Post-deploy Commands
postDeployCommand: |
  echo "🏁 Running post-deploy tasks..."
  
  # Wait for service to be ready
  sleep 10
  
  # Test health endpoints
  curl -f "$RENDER_EXTERNAL_URL/api/health" || echo "⚠️ Health check warning"
  curl -f "$RENDER_EXTERNAL_URL/api/proxy/status" || echo "⚠️ Proxy status warning"
  curl -f "$RENDER_EXTERNAL_URL/api/exchanges/health" || echo "⚠️ Exchange health warning"
  
  echo "🎉 ADK Arbitrage Profit Guard deployment COMPLETED!"
  echo "🌐 Service URL: $RENDER_EXTERNAL_URL"
  echo "📊 Health Check: $RENDER_EXTERNAL_URL/api/health"
  echo "🏥 Full Health: $RENDER_EXTERNAL_URL/api/health/full"
  echo "📈 Monitoring: $RENDER_EXTERNAL_URL/api/monitoring/status"
  echo "✅ All fixes have been applied - System is PRODUCTION READY!"

# 🚨 Alert Configuration
alerts:
  - rule: cpu > 80
    message: High CPU usage detected
  - rule: memory > 90
    message: High memory usage detected
  - rule: response_time > 5000
    message: Slow response time detected
